plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'jacoco'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

javafx {
    version = "17.0.2"
    modules = ['javafx.controls','javafx.media']
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation group: 'com.opencsv', name: 'opencsv', version: '5.7.1'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
}

jacocoTestReport {
    reports {
        html.enabled = true
        csv.enabled = true
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/App.class', '**/WindowManager.class','**/AppWindow.class'])
        }))
    }
}

jacoco {
    toolVersion = "0.8.8"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

test {
    useJUnitPlatform()
    test.finalizedBy jacocoTestReport
}

application {
    mainClass = 'CC_08_Ass2.App'
}


tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        html.enabled = true
        csv.enabled = true
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/App.class', '**/UIManager.class'])
        }))
    }
}

jacoco {
    toolVersion = "0.8.8"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

test {
    useJUnitPlatform()
    test.finalizedBy jacocoTestReport // <- add this line
}